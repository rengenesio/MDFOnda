#############################################################################
# Makefile for building: release/MDFonda
# Generated by qmake (2.01a) (Qt 4.8.2) on: Mon Oct 13 15:11:13 2014
# Project:  MDFonda.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile MDFonda.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/X11R6/lib -lGLU -lglut -Wunused-parameter -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/MainWindow.cpp \
		src/GLDisplay.cpp \
		src/Arcball.cpp \
		src/RenderController.cpp \
		src/Object3D.cpp \
		src/DirectionalLight.cpp \
		src/Scene3D.cpp \
		src/Wave.cpp \
		src/Vector.cpp \
		src/Point.cpp \
		src/Color.cpp \
		src/Main.cpp moc_MainWindow.cpp \
		moc_GLDisplay.cpp \
		moc_Arcball.cpp \
		moc_RenderController.cpp \
		moc_Object3D.cpp \
		moc_DirectionalLight.cpp \
		moc_Wave.cpp
OBJECTS       = MainWindow.o \
		GLDisplay.o \
		Arcball.o \
		RenderController.o \
		Object3D.o \
		DirectionalLight.o \
		Scene3D.o \
		Wave.o \
		Vector.o \
		Point.o \
		Color.o \
		Main.o \
		moc_MainWindow.o \
		moc_GLDisplay.o \
		moc_Arcball.o \
		moc_RenderController.o \
		moc_Object3D.o \
		moc_DirectionalLight.o \
		moc_Wave.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		MDFonda.pro
QMAKE_TARGET  = MDFonda
DESTDIR       = release/
TARGET        = release/MDFonda

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) release/ || $(MKDIR) release/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: MDFonda.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile MDFonda.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile MDFonda.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/MDFonda1.0.0 || $(MKDIR) .tmp/MDFonda1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/MDFonda1.0.0/ && $(COPY_FILE) --parents src/MainWindow.h src/GLDisplay.h src/Arcball.h src/RenderController.h src/Object3D.h src/DirectionalLight.h src/Scene3D.h src/Wave.h src/Vector.h src/Point.h src/Color.h src/UIMainWindow.h .tmp/MDFonda1.0.0/ && $(COPY_FILE) --parents src/MainWindow.cpp src/GLDisplay.cpp src/Arcball.cpp src/RenderController.cpp src/Object3D.cpp src/DirectionalLight.cpp src/Scene3D.cpp src/Wave.cpp src/Vector.cpp src/Point.cpp src/Color.cpp src/Main.cpp .tmp/MDFonda1.0.0/ && (cd `dirname .tmp/MDFonda1.0.0` && $(TAR) MDFonda1.0.0.tar MDFonda1.0.0 && $(COMPRESS) MDFonda1.0.0.tar) && $(MOVE) `dirname .tmp/MDFonda1.0.0`/MDFonda1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/MDFonda1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_MainWindow.cpp moc_GLDisplay.cpp moc_Arcball.cpp moc_RenderController.cpp moc_Object3D.cpp moc_DirectionalLight.cpp moc_Wave.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_MainWindow.cpp moc_GLDisplay.cpp moc_Arcball.cpp moc_RenderController.cpp moc_Object3D.cpp moc_DirectionalLight.cpp moc_Wave.cpp
moc_MainWindow.cpp: src/RenderController.h \
		src/MainWindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/MainWindow.h -o moc_MainWindow.cpp

moc_GLDisplay.cpp: src/GLDisplay.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/GLDisplay.h -o moc_GLDisplay.cpp

moc_Arcball.cpp: src/Arcball.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Arcball.h -o moc_Arcball.cpp

moc_RenderController.cpp: src/RenderController.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/RenderController.h -o moc_RenderController.cpp

moc_Object3D.cpp: src/MainWindow.h \
		src/RenderController.h \
		src/Object3D.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Object3D.h -o moc_Object3D.cpp

moc_DirectionalLight.cpp: src/DirectionalLight.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/DirectionalLight.h -o moc_DirectionalLight.cpp

moc_Wave.cpp: src/Color.h \
		src/MainWindow.h \
		src/RenderController.h \
		src/Object3D.h \
		src/Vector.h \
		src/Point.h \
		src/Wave.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Wave.h -o moc_Wave.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

MainWindow.o: src/MainWindow.cpp src/MainWindow.h \
		src/RenderController.h \
		src/GLDisplay.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainWindow.o src/MainWindow.cpp

GLDisplay.o: src/GLDisplay.cpp src/GLDisplay.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLDisplay.o src/GLDisplay.cpp

Arcball.o: src/Arcball.cpp src/Arcball.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Arcball.o src/Arcball.cpp

RenderController.o: src/RenderController.cpp src/RenderController.h \
		src/GLDisplay.h \
		src/MainWindow.h \
		src/Object3D.h \
		src/Arcball.h \
		src/DirectionalLight.h \
		src/Scene3D.h \
		src/Wave.h \
		src/Color.h \
		src/Vector.h \
		src/Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RenderController.o src/RenderController.cpp

Object3D.o: src/Object3D.cpp src/Object3D.h \
		src/MainWindow.h \
		src/RenderController.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Object3D.o src/Object3D.cpp

DirectionalLight.o: src/DirectionalLight.cpp src/DirectionalLight.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DirectionalLight.o src/DirectionalLight.cpp

Scene3D.o: src/Scene3D.cpp src/Scene3D.h \
		src/MainWindow.h \
		src/RenderController.h \
		src/Object3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Scene3D.o src/Scene3D.cpp

Wave.o: src/Wave.cpp src/Wave.h \
		src/Color.h \
		src/MainWindow.h \
		src/RenderController.h \
		src/Object3D.h \
		src/Vector.h \
		src/Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Wave.o src/Wave.cpp

Vector.o: src/Vector.cpp src/Vector.h \
		src/Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Vector.o src/Vector.cpp

Point.o: src/Point.cpp src/Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Point.o src/Point.cpp

Color.o: src/Color.cpp src/Color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Color.o src/Color.cpp

Main.o: src/Main.cpp src/MainWindow.h \
		src/RenderController.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Main.o src/Main.cpp

moc_MainWindow.o: moc_MainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainWindow.o moc_MainWindow.cpp

moc_GLDisplay.o: moc_GLDisplay.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GLDisplay.o moc_GLDisplay.cpp

moc_Arcball.o: moc_Arcball.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Arcball.o moc_Arcball.cpp

moc_RenderController.o: moc_RenderController.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RenderController.o moc_RenderController.cpp

moc_Object3D.o: moc_Object3D.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Object3D.o moc_Object3D.cpp

moc_DirectionalLight.o: moc_DirectionalLight.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_DirectionalLight.o moc_DirectionalLight.cpp

moc_Wave.o: moc_Wave.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Wave.o moc_Wave.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

